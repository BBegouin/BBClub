# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-09-16 13:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='coachs')),
                ('Club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='league_manager.Club')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('Club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='league_manager.Club')),
            ],
        ),
        migrations.CreateModel(
            name='Match_Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date de la rencontre')),
                ('weather', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('miss_next_game', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Player_Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_pass', models.PositiveSmallIntegerField()),
                ('nb_td', models.PositiveSmallIntegerField()),
                ('nb_int', models.PositiveSmallIntegerField()),
                ('nb_cas', models.PositiveSmallIntegerField()),
                ('nb_mvp', models.PositiveSmallIntegerField()),
                ('nb_foul', models.PositiveSmallIntegerField()),
                ('nb_blocks', models.PositiveSmallIntegerField()),
                ('is_wounded', models.BooleanField()),
                ('serious_casualty', models.PositiveSmallIntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Ref_Roster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('reroll_price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ref_Roster_Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max', models.PositiveSmallIntegerField()),
                ('position', models.CharField(max_length=30)),
                ('cost', models.PositiveSmallIntegerField()),
                ('M', models.PositiveSmallIntegerField()),
                ('F', models.PositiveSmallIntegerField()),
                ('Ag', models.PositiveSmallIntegerField()),
                ('Ar', models.PositiveSmallIntegerField()),
                ('normal_skills', models.CharField(max_length=4)),
                ('double_skills', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Ref_Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('desc', models.TextField()),
                ('family', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('treasury', models.PositiveSmallIntegerField()),
                ('nb_rerolls', models.PositiveSmallIntegerField()),
                ('pop', models.PositiveSmallIntegerField()),
                ('assistants', models.PositiveSmallIntegerField()),
                ('cheerleeders', models.PositiveSmallIntegerField()),
                ('apo', models.BooleanField()),
                ('igor', models.BooleanField()),
                ('cuistot', models.BooleanField()),
                ('icon_file', models.ImageField(upload_to='team_icons')),
                ('DungeonBowl', models.BooleanField()),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Coach')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.League')),
                ('ref_roster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Ref_Roster')),
            ],
        ),
        migrations.CreateModel(
            name='Team_Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('supporters', models.PositiveSmallIntegerField()),
                ('fame', models.PositiveSmallIntegerField()),
                ('winnings', models.PositiveSmallIntegerField()),
                ('fan_factor', models.SmallIntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Match_Report')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Xp_Roll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('Values', models.CharField(max_length=30)),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Player')),
            ],
        ),
        migrations.AddField(
            model_name='ref_roster_line',
            name='base_skills',
            field=models.ManyToManyField(to='league_manager.Ref_Skills'),
        ),
        migrations.AddField(
            model_name='ref_roster_line',
            name='roster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Ref_Roster'),
        ),
        migrations.AddField(
            model_name='player_report',
            name='team_report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Team_Report'),
        ),
        migrations.AddField(
            model_name='player',
            name='ref_roster_line',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Ref_Roster_Line'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_manager.Team'),
        ),
    ]
